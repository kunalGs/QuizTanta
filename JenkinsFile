pipeline {
    agent any
 environment {
        dockercImage='client'
        dockersImage='server'
        registry = "kunalg3s/majorproject"
        registryCredential = 'docker-login'
    }
    stages {
        stage('Step 1: Git clone') {
            steps {
                git url: 'https://github.com/kunalGs/QuizTantra.git',
				branch: 'master',
                credentialsId: 'github_cred'
            }
        }
        stage('step 2 : firebase Autentication test ')
        {
           steps{
               dir(test){

                   sh 'npm install'
                   sh 'npm test'
               }
           }

        }
          stage('Step 3: Build server image') {
            steps {
                dir('backend'){
                    sh 'docker build -t server2:latest .'
                }
                
            }
        }
        
          stage('Step 4: Build front-end Image') {
            steps {
                
                    sh 'docker build -t client2:latest .'
                }
             }
             
         stage('Step 5: Publish Front-end Docker Image') {
            steps {
                docker.withRegistry('' , registryCredential) {
                    sh 'docker tag client2:latest hassu786/majorproject:client'
                    sh 'docker push hassu786/majorproject:client'
                }
            }
        }
        
         stage('Step 5: Publish Server Docker Image') {
            steps {
                withDockerRegistry([ credentialsId: "dockerhub_credential", url: "" ]) {
                    sh 'docker tag server2:latest hassu786/majorproject:server'
                    sh 'docker push hassu786/majorproject:server'
                }
            }
         }
        
        stage('Step 6: Clean Docker Images') {
            steps {
                sh 'docker rmi -f hassu786/majorproject:server'
                sh 'docker rmi -f hassu786/majorproject:client'
                
            }
        }
         
           stage('Stage 7: Deploy and Run Images'){
            steps {
               ansiblePlaybook becomeUser: null, colorized: true, disableHostKeyChecking: true, installation: 'Ansible', inventory: 'inventory', playbook: 'p2.yml', sudoUser: null
            }
        }
         
         
         
    }
}